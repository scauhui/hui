import requests
from urllib.parse import urlencode
from pyquery import PyQuery as pq
from pymongo import MongoClient

base_url = 'https://m.weibo.cn/api/container/getIndex?'#基本url
headers = {
    'Host': 'm.weibo.cn',
    'Referer': 'https://m.weibo.cn/u/2145291155',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36',
    'X-Requested-With': 'XMLHttpRequest',
}  #构建参数头，在network中查看
client = MongoClient()  ##连接数据库
db = client['lily']  #指定数据库
collection = db['lily'] #声明对象
max_page = 10  #最大翻页


def get_page(page):  #构造每一页的请求
    params = {
        'type': 'uid',
        'value': '2145291155',
        'containerid': '1076032145291155',
        'page': page
    }
    url = base_url + urlencode(params) #完整的url，根据network判断发现
    try:
        response = requests.get(url, headers=headers)
        if response.status_code == 200:  #响应码
            return response.json(), page
    except requests.ConnectionError as e:
        print('Error', e.args)


def parse_page(json, page: int):  #解析每一页的内容
    if json:
        items = json.get('data').get('cards')
        for index, item in enumerate(items): #遍历生成器里的每一个数据
            if page == 1 and index == 1:
                continue
            else:
                item = item.get('mblog')  #利用network分析
                lily = {}
                lily['id'] = item.get('id')
                lily['text'] = pq(item.get('text')).text()
                lily['attitudes'] = item.get('attitudes_count')
                lily['comments'] = item.get('comments_count')
                lily['reposts'] = item.get('reposts_count')
                yield lily
                


def save_to_mongo(result): ##写进数据库
    if collection.insert(result):
        print('Saved to Mongo')

if __name__ == '__main__':
    for page in range(1, max_page + 1): #设置翻页
        json = get_page(page)   #下面是参数传递
        results = parse_page(*json)
        for result in results:
            print(result)
            save_to_mongo(result)
            
